program

typedecl row struct {n0:int; n1:int; n2:int; n3:int; n4:int; n5:int;};
typedecl setelem struct {n0:int; n1:int; n2:int;};
typedecl res struct {n0:int; n1:int; n2:setelem *; n3:int; n4:int;};

row * input;
row x;

res output = {n0=0, n1=0, n2=[], n3=0, n4=0};
setelem * tmp2;
int tmp0;
int tmp1;

setelem y;
setelem z;

boolean to_add;

for(x in input) {
  tmp2 = output.n2;
  to_add = true;

  for(y in output.n2){
    z = {n0=x.n2, n1=x.n3, n2=x.n4};
    if (y == z) {
      to_add = false;
    }
  }

  if(to_add){
    tmp2 += [z];
  }
  
  if(output.n0 > x.n0){
    tmp0 = output.n0;
  } else {
    tmp0 = x.n0;
  }
  if(output.n1 > x.n1){
    tmp1 = output.n1;
  } else {
    tmp1 = x.n1;
  }
  
  output = {n0=tmp0, n1=tmp1, n2=tmp2, n3=output.n3+x.n5-output.n3/output.n4+1, n4=output.n4+1};
}
return output;