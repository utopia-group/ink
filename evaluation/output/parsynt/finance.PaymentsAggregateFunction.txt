 SUCCESS  Parsed /home/zwang/research/ink/evaluation/parsynt/finance.PaymentsAggregateFunction.minic.
 SUCCESS  Equation system: 
// --- Lifted function ---
_s1 = { n0 = 0; n1 = 0; n2 = 0; n3 = 0; n4 = 0; n5 = 0; n6 = 0; }for(x in input){
                                                                   _s1 = {
                                                                    n0 = _s1.n0;
                                                                    n1 =
                                                                    _s1.n1 +
                                                                    (if
                                                                    x.n0 = 0
                                                                    then 1 else
                                                                    0);
                                                                    n2 =
                                                                    _s1.n2 +
                                                                    (if
                                                                    x.n0 = 1
                                                                    then 1 else
                                                                    0);
                                                                    n3 =
                                                                    _s1.n3 +
                                                                    (if
                                                                    x.n0 = 2
                                                                    then x.n1
                                                                    else 0);
                                                                    n4 =
                                                                    _s1.n4 +
                                                                    (if
                                                                    x.n0 = 0
                                                                    then x.n1
                                                                    else 0);
                                                                    n5 =
                                                                    _s1.n5 +
                                                                    (if
                                                                    x.n0 = 1
                                                                    then x.n1
                                                                    else 0);
                                                                    n6 =
                                                                    _s1.n6 +
                                                                    (if
                                                                    x.n0 = 2
                                                                    then x.n1
                                                                    else 0);
                                                                   }
                                                                   }
                                                                   return _s1;
//--- Splitting predicate:
Â¬ (input(0).n0 = 0) || (input(0).n0 = 1) || (input(0).n0 = 2)
//--- Join function ---
join($L1,$R1) = {
  n0 = $L1.n0;
  n1 = $L1.n1 + $R1.n1;
  n2 = $L1.n2 + $R1.n2;
  n3 = $L1.n3 + $R1.n3;
  n4 = $L1.n4 + $R1.n4;
  n5 = $L1.n5 + $R1.n5;
  n6 = $L1.n6 + $R1.n6;
}
// Synthesized in (predicate : 1.56 s) + (join : 0.00 s)

 SUCCESS  Finished.
