 SUCCESS  Parsed /home/zwang/research/ink/evaluation/parsynt/HarmonicMeanUDAF.minic.
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
  ERROR   Struct: output1.n2
  ERROR   Cannot create smt term for struct
 SUCCESS  Equation system: 
// --- Lifted function ---
_s1 = { output1 = {n0 = 0; n1 = 0; n2 = false}; }for(x in input){
                                                   _s1 = {
                                                     output1 =
                                                     if
                                                       Â¬
                                                         (x = 0) ||
                                                           _s1.output1.n2
                                                       then
                                                       {n0 = _s1.output1.n0 + 1;
                                                        n1 = _s1.output1.n0 +
                                                               (x * 2);
                                                        n2 = (x = 0) ||
                                                               _s1.output1.n2}
                                                       else
                                                       {n0 = _s1.output1.n0;
                                                        n1 = _s1.output1.n1;
                                                        n2 = true};
                                                   }
                                                   }
                                                   return _s1;
//--- Splitting predicate: true
//--- Join function ---
join($L1,$R1) = { ?? = (empty);
}
// Synthesized in (predicate : 0.02 s) + (join : 1.65 s)

 SUCCESS  Finished.
